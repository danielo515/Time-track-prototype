{"version":3,"sources":["data.js","TaskGroup.js","demo.js","index.js"],"names":["name","lastRun","total","useStyles","makeStyles","theme","nested","paddingLeft","spacing","taskOverView","display","rightItem","flex","flexDirection","alignItems","leftItem","TaskGroup","css","React","useState","open","setOpen","Fragment","ListItem","button","onClick","className","ListItemText","primary","secondary","classes","root","dense","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","width","backgroundColor","palette","background","paper","marginBottom","flexGrow","paddingBottom","container","height","grow","appBar","top","bottom","list","playingIcon","svg","fill","green","BottomBar","AppBar","position","color","Toolbar","Typography","clsx","text","variant","gutterBottom","Fab","aria-label","fabButton","IconButton","edge","ReactDOM","render","CssBaseline","Paper","square","aria-labelledby","subheader","ListSubheader","id","ListItemIcon","colorPrimary","data","map","t","key","document","querySelector"],"mappings":"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","file":"static/js/main.79cca1af.chunk.js","sourcesContent":["export default [\n  { name: \"First task\", lastRun: \"1 day ago\", total: \"3 hours\" },\n  { name: \"Second task\", lastRun: \"2 days ago\", total: \"2 hours\" },\n  { name: \"Third task\", lastRun: \"1 day ago\", total: \"6 hours\" },\n  { name: \"Fourth task\", lastRun: \"1 day ago\", total: \"4 hours\" },\n  { name: \"A task with a longer name\", lastRun: \"1 day ago\", total: \"6 hours\" },\n  { name: \"Random task\", lastRun: \"1 day ago\", total: \"18 minutes\" }\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  taskOverView: {\n    display: \"flex\"\n  },\n  rightItem: {\n    flex: \"0 1 25%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\"\n  },\n  leftItem: {\n    flex: \"1 1 auto\"\n  }\n}));\nexport function TaskGroup({ name, total, lastRun }) {\n  const css = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const toggle = () => setOpen(!open);\n  return (\n    <React.Fragment>\n      <ListItem button onClick={toggle} className={css.taskOverView}>\n        <ListItemText\n          primary={name}\n          secondary={lastRun}\n          classes={{ root: css.leftItem, dense: \"rabo\" }}\n        />\n        <ListItemText primary=\"Today\" secondary={total} className={css.rightItem}/>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={css.nested}>\n            <ListItemText primary=\"Started\" secondary=\"10 May 2018\" />\n            <ListItemText primary=\"Duration\" secondary=\"5 hours\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { green } from \"@material-ui/core/colors\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/More\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport clsx from \"clsx\";\nimport data from \"./data\";\nimport { TaskGroup } from './TaskGroup'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(2),\n    flexGrow: 1\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  container: {\n    display: \"flex\",\n    height: \"100%\"\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  grow: {\n    flexGrow: 1\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  list: {},\n  playingIcon: {\n    svg: {\n      fill: green.primary\n    }\n  }\n}));\n\nfunction BottomBar() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n    <Toolbar>\n      <Typography className={clsx( classes.grow, classes.text )} variant=\"h5\" gutterBottom>\n        00:10:55\n      </Typography>\n      <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n        <AddIcon />\n      </Fab>\n      <div className={classes.grow} />\n      <IconButton color=\"inherit\">\n        <SearchIcon />\n      </IconButton>\n      <IconButton edge=\"end\" color=\"inherit\">\n        <MoreIcon />\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n  )\n}\nexport default function NestedList() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={classes.container}>\n      <CssBaseline />\n      <Paper square className={clsx(classes.paper, classes.grow)}>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          subheader={\n            <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n              Nested List Items\n            </ListSubheader>\n          }\n          className={classes.root}\n        >\n          <ListItem button onClick={handleClick}>\n            <ListItemText primary=\"First task\" />\n            <ListItemIcon>\n              <PlayArrow classes={{ colorPrimary: classes.playingIcon }} />\n            </ListItemIcon>\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button className={classes.nested}>\n                <ListItemText primary=\"Started\" secondary=\"13 may 2019\" />\n                <ListItemText primary=\"Duration\" secondary=\"5 hours\" />\n              </ListItem>\n            </List>\n          </Collapse>\n          {data.map(t => (\n            <TaskGroup {...t} key={t.name} />\n          ))}\n        </List>\n      </Paper>\n      <BottomBar/>\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Demo from \"./demo\";\nimport \"./style.css\";\n\nReactDOM.render(<Demo />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}